conf:
  package_name: prolo2012
  client_rule_lib: TODO
  server_rule_lib: TODO
  player_lib: champion
  player_filename: prologin

constant:
# Constantes pour les personnages
  -
    cst_name: VOLEUR_VISION
    cst_val: 5
    cst_comment: Vision du Voleur
  -
    cst_name: VOLEUR_DEPLACEMENT
    cst_val: 10
    cst_comment: Déplacement du Voleur
  -
    cst_name: VOLEUR_VIE
    cst_val: 10
    cst_comment: Vie du Voleur
  -
    cst_name: VOLEUR_ATTAQUE
    cst_val: 5
    cst_comment: Attaque du voleur
  -
    cst_name: VOLEUR_PALANTIR_CD
    cst_val: 3
    cst_comment: Cooldown de l'attaque "Palantir" du Voleur
  -
    cst_name: VOLEUR_TRAITRISE_CD
    cst_val: 5
    cst_comment: Cooldown de l'attaque "Traîtrise" du Voleur

  -
    cst_name: BARBARE_VISION
    cst_val: 4
    cst_comment: Vision du Barbare
  -
    cst_name: BARBARE_DEPLACEMENT
    cst_val: 8
    cst_comment: Déplacement du Barbare
  -
    cst_name: BARBARE_VIE
    cst_val: 10
    cst_comment: Vie du Barbare
  -
    cst_name: BARBARE_ATTAQUE
    cst_val: 3
    cst_comment: Attaque du Barbare
  -
    cst_name: BARBARE_BASTOOOON_CD
    cst_val: 3
    cst_comment: Cooldown de l'attaque "Bastoooon" du Barbare
  -
    cst_name: BARBARE_FUS_RO_DAH_CD
    cst_val: 5
    cst_comment: Cooldown de l'attaque "Fus Ro Dah" du Barbare

  -
    cst_name: ELFE_VISION
    cst_val: 4
    cst_comment: Vision de l'Elfe
  -
    cst_name: ELFE_DEPLACEMENT
    cst_val: 6
    cst_comment: Déplacement de l'Elfe
  -
    cst_name: ELFE_VIE
    cst_val: 10
    cst_comment: Vie de l'Elfe
  -
    cst_name: ELFE_ATTAQUE
    cst_val: 2
    cst_comment: Attaque de l'Elfe
  -
    cst_name: ELFE_LOTO_CD
    cst_val: 5
    cst_comment: Cooldown de l'attaque "Loto, à qui le tour ?" de l'Elfe
  -
    cst_name: ELFE_I_SEE_CD
    cst_val: 5
    cst_comment: Cooldown de l'attaque "I See What You Did There" de l'Elfe

enum:
  -
    enum_name: perso_classe
    enum_summary:
      "Type de personnage"
    enum_field:
      - [perso_voleur, "Voleur"]
      - [perso_barbare, "Barbare"]
      - [perso_elfe, "Elfe"]
  -
    enum_name: zone_type
    enum_summary:
      "Type de zone"
    enum_field:
      - [zone_herbe, "Herbe"]
      - [zone_route, "Route"]
      - [zone_foret, "Forêt"]
      - [zone_marais, "Marais"]
      - [zone_mur, "Mur"]
      - [zone_tour, "Tour de guet"]
      - [zone_erreur, "Erreur, case impossible"]
  -
    enum_name: attaque_type
    enum_summary:
      "Type d'attaque"
    enum_field:
      - [attaque_normale, "Attaque normale dont les dégats dépendent du personnage"]
      - [attaque_palantir, "Attaque 'Palantir' du Voleur"]
      - [attaque_traitrise, "Attaque 'Traîtrise' du Voleur"]
      - [attaque_bastoooon, "Attaque 'Bastoooon' de du Barbare"]
      - [attaque_fus_ro_dah, "Attaque 'Fus Ro Dah' du Barbare"]
      - [attaque_i_see, "Attaque 'I see what you did there.' de l'Elfe"]
      - [attaque_loto, "Attaque 'Loto, à qui le tour' de l'Elfe"]
  -
    enum_name: orientation
    enum_summary:
      "Orientation du personnage"
    enum_field:
      - [orientation_nord, "Orienté au nord"]
      - [orientation_est, "Orienté à l'est"]
      - [orientation_sud, "Orienté au sud"]
      - [orientation_ouest, "Orienté à l'ouest"]
  -
    enum_name: erreur
    enum_summary:
      "Erreurs possibles"
    enum_field:
      - [position_impossible, "La position n'existe pas"]
      - [personnage_impossible, "Le personnage n'existe pas ou ne vous appartient pas"]
      - [chemin_impossible, "Le chemin est impossible"]
      - [attaque_indisponible, "L'attaque n'est pas utilisable pour le moment"]
      - [ok, "Pas d'erreur"]

struct:
  -
    str_name: position
    str_summary: Représente une position sur le terrain du jeu
    str_tuple: yes
    str_field:
      - [x, int, coordonnée en X]
      - [y, int, coordonnée en Y]
  -
    str_name: perso_info
    str_summary: Représente les informations sur un personnage
    str_tuple: no
    str_field:
      - [equipe, int, "Équipe à laquelle appartient le personnage"]
      - [classe, perso_classe, "Classe du personnage"]
      - [vie, int, "Vie courante du personnage"]
      - [direction, orientation, "Orientation du personnage"]

function:
# Fonctions pour la carte
  -
    fct_name: carte_taille
    fct_summary:
      Retourne la taille de la carte.
    fct_ret_type: position
    fct_arg: []
  -
    fct_name: carte_zone_type
    fct_summary:
      Retourne la nature de la zone désignée par ``pos``.
    fct_ret_type: zone_type
    fct_arg:
      - [pos, position, "Position"]
  -
    fct_name: carte_zone_perso
    fct_summary:
      Retourne la liste des personnages sur la zone.
    fct_ret_type: perso_info array
    fct_arg:
      - [pos, position, "Position de la zone"]
  -
    fct_name: distance
    fct_summary:
      Renvoie la longueur du chemin le plus court entre deux points. Renvoie -1
      en cas de positions invalides ou de chemin inexistant.
    fct_ret_type: int
    fct_arg:
      - [p1, position, "position de départ"]
      - [p2, position, "position d'arrivée"]
  -
    fct_name: chemin
    fct_summary:
      Renvoie le chemin le plus court entre deux points. Si le chemin n'existe
      pas, ou si les positions sont invalides, le chemin renvoyé est vide.
    fct_ret_type: position array
    fct_arg:
      - [p1, position, "position de départ"]
      - [p2, position, "position d'arrivée"]

# Fonctions pour les personnages
  -
    fct_name: perso_deplace
    fct_summary:
      Déplace le personnage ``perso`` en suivant un le chemin
      ``chemin`` donné sous forme d'une suite de ``position``, orientant le
      personnage sur la zone d'arrivée dans la direction ``orientation``.
    fct_ret_type: erreur
    fct_arg:
      - [perso, perso_info, "Personnage à déplacer"]
      - [chemin, position array, "Tableau de ``position`` composants le chemin"]
      - [direction, orientation, "Orientation sur la dernière zone d'arrivée"]
  -
    fct_name: perso_penombre
    fct_summary:
      Récupère la liste des zones sur lesquelles des personnages ont été aperçus
      dans la pénombre par ``perso``.
    fct_ret_type: position array
    fct_arg:
      - [perso, perso_info, "Personnage"]
  -
    fct_name: perso_vision
    fct_summary:
      Récupère la liste des zones dans le champs de vision de ``perso``.
    fct_ret_type: position array
    fct_arg:
      - [perso, perso_info, "Personnage"]
  -
    fct_name: perso_vision_ennemis
    fct_summary:
      Récupère la liste des zones dans le champs de vision de ``perso`` où sont
      situés un ou plusieurs personnages (amis ou ennemis).
    fct_ret_type: position array
    fct_arg:
      - [perso, perso_info, "Personnage"]
  -
    fct_name: palantir_vision
    fct_summary:
      Récupère la liste des zones sur lesquelles le palantír du voleur voit
      d'autre personnages.
    fct_ret_type: position array
    fct_arg: []
  -
    fct_name: elfe_vision
    fct_summary:
      Récupère la liste des zones sur lesquelles l'elfe peut voir via son
      attaque "I See What You Did There".
    fct_ret_type: position array
    fct_arg: []
  -
    fct_name: perso_attaque
    fct_summary:
      Effectue l'attaque ``attaque`` avec le personnage ``perso`` sur la zone
      ``pos``.
    fct_ret_type: erreur
    fct_arg:
      - [perso, perso_info, "Personnage"]
      - [attaque, attaque_type, "Attaque à utiliser"]
      - [pos, position, "Zone à attaquer"]
  -
    fct_name: perso_attaque_recharge
    fct_summary:
      Retourne le temps de recharge restant pour l'attaque ``attaque`` du
      personnage ``perso``.
    fct_ret_type: int
    fct_arg:
      - [perso, perso_info, "Personnage"]
      - [attaque, attaque_type, "Attaque à vérifier"]

# Autre
  -
    fct_name: mon_equipe
    fct_summary: Retourne le numéro de votre équipe
    fct_ret_type: int
    fct_arg: []
  -
    fct_name: scores
    fct_summary: Retourne les scores de chaque équipe
    fct_ret_type: int array
    fct_arg: []
  -
    fct_name: nombre_equipes
    fct_summary: "Retourne le nombre d'équipes sur le terrain"
    fct_ret_type: int
    fct_arg: []
  -
    fct_name: tour_actuel
    fct_summary: Retourne le numéro du tour actuel
    fct_ret_type: int
    fct_arg: []

user_function:
  -
    fct_name: partie_init
    fct_summary: Fonction appellée au début de la partie
    fct_ret_type: void
    fct_arg: []
  -
    fct_name: jouer_placement
    fct_summary: Fonction appellée pendant la phase de placement
    fct_ret_type: void
    fct_arg: []
  -
    fct_name: jouer_deplacement
    fct_summary: Fonction appellée pendant la phase de déplacement
    fct_ret_type: void
    fct_arg: []
  -
    fct_name: jouer_attaque
    fct_summary: Fonction appellée pendant la phase d'attaque
    fct_ret_type: void
    fct_arg: []
  -
    fct_name: partie_fin
    fct_summary: Fonction appellée à la fin de la partie
    fct_ret_type: void
    fct_arg: []
